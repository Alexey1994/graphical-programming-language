{"types":[{"name":"16","type":{"primitiveTypeIndex":0,"value":16}}],"constants":[{"name":"1","typeIndex":0,"value":1},{"name":"16","typeIndex":0,"value":16},{"name":"2","typeIndex":0,"value":2},{"name":"22","typeIndex":0,"value":22},{"name":"3","typeIndex":0,"value":3}],"functions":[{"name":"старт программы","arguments":[],"combinations":[{"variables":[{"name":"a"}],"combination":[],"body":[{"functionIndex":1,"arguments":[{"constantIndex":0},{"variableIndex":0}]},{"functionIndex":1,"arguments":[{"variableIndex":0},{"variableIndex":0}]},{"functionIndex":1,"arguments":[{"constantIndex":1},{"variableIndex":0}]},{"functionIndex":1,"arguments":[{"constantIndex":2},{"variableIndex":0}]},{"functionIndex":1,"arguments":[{"constantIndex":3},{"variableIndex":0}]},{"functionIndex":1,"arguments":[{"constantIndex":4},{"variableIndex":0}]},{"branch":0,"functionIndex":2,"arguments":[]}],"translate":""}]},{"name":"копировать","arguments":[{"label":"из","name":"a"},{"label":"в","name":"b"}],"combinations":[{"variables":[],"combination":[null,null],"body":[],"translate":"//console.log(rootCombination.variables[arguments[0].variableIndex])\n\nif(typeof arguments[1].variableIndex == 'undefined'){\n    console.log('error')\n    //return\n}\n\nvar destination = rootCombination.variables[arguments[1].variableIndex]\n\nvar source\nconsole.log(arguments[0])\nif(typeof arguments[0].variableIndex !== 'undefined'){\n    source = rootCombination.variables[arguments[0].variableIndex]\n}\nelse if(typeof arguments[0].constantIndex !== 'undefined'){\n\n    source = constants[arguments[0].constantIndex]\nconsole.log('value is ' + source.value)\nconsole.log(constants)\n\n\n    //pop ax\n    //pop bx\n\n\n    out.write(0x67); out.write(0xC7); out.write(0x45); //mov word [ebp+variableIndex * 2], constantValue\n        out.write(arguments[1].variableIndex * 2);\n        out.write(source.value % 255); out.write((source.value / 255) % 255);\n}\n\n\nif(typeof source.type == 'undefined'){\n    console.log('error: variable ' + source.name + ' is undefined')\n}\n\n//var source = rootCombination.variables[arguments[0].variableIndex]\n\ndestination.type = source.type\n//arguments[1].type = arguments[0].type\n\n//console.log(destination)\n//console.log(source)\n\n"}]},{"name":"f","arguments":[],"combinations":[{"variables":[],"combination":[],"body":[],"translate":"//call\nvar address = (combination.beginAddress - out.address- 4 + 1) & 65535\nout.write(0xE8);\n    out.write(address % 256); out.write((address / 256) % 256);\nout.write(0x50);\n\n//jump\nif(typeof call.branch !== 'undefined'){\n    address = (body[call.branch].beginAddress - out.address - 7) & 65535\n\n    out.write(0x83); out.write(0xF8); //cmp ax, 0\n        out.write(0x00);\n                                \n    out.write(0x0F); out.write(0x84); //je address\n        out.write(address % 256); out.write((address / 256) % 256);\n}"}]}]}